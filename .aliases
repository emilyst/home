# useful aliases
alias alert="echo -e '\a'"
alias dt="date +%Y-%m-%d-%H%M%S"

[[ -e "/usr/bin/htop" ]] && alias top="/usr/bin/htop"

alias override='sudo --preserve-env $SHELL -c "$(fc -ln -1)"'

alias lockscreen='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'
alias lock='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'

alias got="git"
alias gut="git"
alias shit="git"

alias gist="gist -p"

# if hash nvim >/dev/null 2>&1; then
#     alias vim="nvim"
#     alias vi="nvim"
#     alias v="nvim"
# else
    alias vi="vim"
    alias v="vim"
# fi
#

alias rg="rg --no-ignore-parent --smart-case"
alias rsync="rsync -av --progress"

if [[ "$OSTYPE" == "darwin"* ]]; then
  alias l='ls -AlFhtO'
else
  alias l='ls -AlFht'
fi
alias lh='ls -Ad .*'
alias ll='ls -AlF'
alias la='ls -A'

function timestamp() {
  local original_tz=$TZ
  unset TZ

  if [[ "$OSTYPE" == "darwin"* || "$OSTYPE" == *"bsd"* ]]; then
    echo "$(date -r $1 -u '+%FT%T%z (%Z)')"\
         "/ $(date -r $1 '+%FT%T%z (%Z)')"
  else
    echo "$(date -d @$1 -u '+%FT%T%z (%Z)')"\
         "/ $(date -d @$1 '+%FT%T%z (%Z)')"
  fi

  export TZ=original_tz
}

# enable color support of ls and also add handy aliases
if [[ -x "/usr/bin/dircolors" ]]; then
    test -r "$HOME/.dircolors" && eval "$(dircolors -b $HOME/.dircolors)" || eval "$(dircolors -b)"

    alias grep="grep --color=auto"
    alias fgrep="fgrep --color=auto"
    alias egrep="egrep --color=auto"
fi

# find a file with a pattern in name:
function ff() { find . -type f -iname '*'$*'*' -ls ; }

# find a directory with a pattern in name:
function fd() { find . -type d -iname '*'$*'*' -ls ; }

# find a file with pattern $1 in name and Execute $2 on it:
function fe() { find . -type f -iname '*'${1:-}'*' -exec ${2:-file} {} \;  ; }

function calc() { bc -l <<< "scale=4; $*;" } # quick bc frontend with 4 decimal precision
alias calc="noglob calc" # allows using '*' in zsh

alias rib='irb'  # because i'm not good at typing
alias mcrib='irb'  # because i'm not good at restraint

# "borrowed" from oh-my-zsh/plugins/osx
function man-preview() { man -t "$@" | open -f -a Preview }
if whence compdef >/dev/null 2>&1; then compdef _man man-preview; fi

# a briefer, tidier, less safe version of iTerm2's it2setkeylabel
# see https://www.iterm2.com/documentation-escape-codes.html
function set_status_label() { echo -n "\033]1337;SetKeyLabel=status=$@\a" }
